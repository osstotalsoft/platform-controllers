/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ConfigurationDomainSpecApplyConfiguration represents an declarative configuration of the ConfigurationDomainSpec type for use
// with apply.
type ConfigurationDomainSpecApplyConfiguration struct {
	PlatformRef         *string `json:"platformRef,omitempty"`
	AggregateConfigMaps *bool   `json:"aggregateConfigMaps,omitempty"`
	AggregateSecrets    *bool   `json:"aggregateSecrets,omitempty"`
}

// ConfigurationDomainSpecApplyConfiguration constructs an declarative configuration of the ConfigurationDomainSpec type for use with
// apply.
func ConfigurationDomainSpec() *ConfigurationDomainSpecApplyConfiguration {
	return &ConfigurationDomainSpecApplyConfiguration{}
}

// WithPlatformRef sets the PlatformRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PlatformRef field is set to the value of the last call.
func (b *ConfigurationDomainSpecApplyConfiguration) WithPlatformRef(value string) *ConfigurationDomainSpecApplyConfiguration {
	b.PlatformRef = &value
	return b
}

// WithAggregateConfigMaps sets the AggregateConfigMaps field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AggregateConfigMaps field is set to the value of the last call.
func (b *ConfigurationDomainSpecApplyConfiguration) WithAggregateConfigMaps(value bool) *ConfigurationDomainSpecApplyConfiguration {
	b.AggregateConfigMaps = &value
	return b
}

// WithAggregateSecrets sets the AggregateSecrets field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AggregateSecrets field is set to the value of the last call.
func (b *ConfigurationDomainSpecApplyConfiguration) WithAggregateSecrets(value bool) *ConfigurationDomainSpecApplyConfiguration {
	b.AggregateSecrets = &value
	return b
}
